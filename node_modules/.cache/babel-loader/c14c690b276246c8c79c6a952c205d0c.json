{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Progressbar.js\";\nimport React from \"react\"; //import Pomodoro from \"./Pomodoro\";\n\nimport MinutestoSeconds from \"./Pomodoro\";\nimport isTimerRunning from \"./Pomodoro\";\nimport focusDuration from \"./Pomodoro\";\nimport breakDuration from \"./Pomodoro\";\n\nfunction Progressbar({\n  session,\n  useInterval,\n  aria\n}) {\n  return session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, session && session.label, \" for\", \" \", (\"0\" + (session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)).substr(-2), \":00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, session && MinutestoSeconds(session.timeRemaining), \" remaining\"), !isTimerRunning && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": aria // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${aria}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  })))));\n}\n\nexport default Progressbar;","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Progressbar.js"],"names":["React","MinutestoSeconds","isTimerRunning","focusDuration","breakDuration","Progressbar","session","useInterval","aria","label","toLowerCase","indexOf","substr","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,aAAP,MAA0B,YAA1B;;AAGA,SAASC,WAAT,CAAqB;AAACC,EAAAA,OAAD;AAASC,EAAAA,WAAT;AAAsBC,EAAAA;AAAtB,CAArB,EAAiD;AAE7C,SACIF,OAAO,iBACH,uDACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGA,OAAO,IAAIA,OAAO,CAACG,KAFtB,UAEiC,GAFjC,EAGK,CACC,OACCH,OAAO,CAACG,KAAR,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,MAApC,IAA8C,CAA9C,GACGR,aADH,GAEGC,aAHJ,CADD,EAKCQ,MALD,CAKQ,CAAC,CALT,CAHL,gBAFF,eAcE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGN,OAAO,IAAIL,gBAAgB,CACzCK,OAAO,CAACO,aADiC,CAH9B,eAdF,EAoBG,CAACX,cAAD,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBtB,CADF,CADA,eAyBA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAgBN,IALlB,CAKuB;AALvB;AAME,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAG,GAAEP,IAAK;AAAjB,KANT,CAM+B;AAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAzBA,CAFR;AA4CG;;AAIH,eAAeH,WAAf","sourcesContent":["import React from \"react\";\n//import Pomodoro from \"./Pomodoro\";\nimport MinutestoSeconds from \"./Pomodoro\";\nimport isTimerRunning from \"./Pomodoro\";\nimport focusDuration from \"./Pomodoro\";\nimport breakDuration from \"./Pomodoro\";\n\n\nfunction Progressbar({session,useInterval ,aria}){\n    \n    return (\n        session && (\n            <>\n            <div className=\"row mb-2\">\n              <div className=\"col\">\n                {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                <h2 data-testid=\"session-title\">\n                  {/* {session ? ` Focusing for ${focusDuration}:00 minutes`: \"\" } */}\n                  {session && session.label} for{\" \"}\n                    {(\n                      \"0\" +\n                      (session.label.toLowerCase().indexOf(\"ocus\") > 0\n                        ? focusDuration\n                        : breakDuration)\n                    ).substr(-2)}\n                    :00 minutes\n                </h2>\n                {/* TODO: Update message below correctly format the time remaining in the current session */}\n                <p className=\"lead\" data-testid=\"session-sub-title\">\n                  {/*{session?.timeRemaining} remaining */}\n                  \n                  {session && MinutestoSeconds \n    (session.timeRemaining)} remaining\n                </p>\n                {!isTimerRunning && <h2>PAUSED</h2>}\n              </div> \n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"col\">\n                <div className=\"progress\" style={{ height: \"20px\" }}>\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    aria-valuenow= {aria}// TODO: Increase aria-valuenow as elapsed time increases\n                    style={{ width: `${aria}%` }}// TODO: Increase width % as elapsed time increases\n                  />\n                </div>\n              </div>\n            </div>\n        </>\n        )\n        );\n      }\n      \n    \n    \n    export default Progressbar;"]},"metadata":{},"sourceType":"module"}